name: Termux-Style Operations

on:
  workflow_dispatch:
    inputs:
      operation:
        description: 'Select operation'
        type: choice
        options:
        - install_packages
        - run_script
        - download_files
        - build_project
        - system_info

jobs:
  termux-ops:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Termux-style operation
      run: |
        echo "🔧 Termux-style Operation: ${{ github.event.inputs.operation }}"
        echo "=========================================="
        
        case "${{ github.event.inputs.operation }}" in
          "install_packages")
            echo "📦 Installing Termux-like packages..."
            sudo apt-get update
            sudo apt-get install -y \
              python3 python3-pip nodejs npm \
              git curl wget ffmpeg \
              vim nano jq tree htop
            pip3 install requests beautifulsoup4 yt-dlp
            echo "✅ Packages installed successfully"
            ;;
            
          "run_script")
            echo "🏃 Looking for scripts to run..."
            if [ -f "termux-script.sh" ]; then
              chmod +x termux-script.sh
              ./termux-script.sh
            elif [ -f "script.py" ]; then
              python3 script.py
            else
              echo "📜 Creating sample script..."
              cat > sample-script.py << 'EOF'
              print("🚀 Running Python script in Termux simulation!")
              import requests
              import os
              print(f"Python version: {os.sys.version}")
              print("Script execution completed!")
              EOF
              python3 sample-script.py
            fi
            ;;
            
          "download_files")
            echo "📥 Downloading files (Termux style)..."
            mkdir -p downloads
            cd downloads
            # Simulate common Termux downloads
            curl -O https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/README.md
            wget https://www.python.org/ftp/python/3.9.7/Python-3.9.7.tgz
            echo "✅ Files downloaded to downloads/"
            ls -la
            ;;
            
          "build_project")
            echo "🔨 Building project..."
            if [ -f "package.json" ]; then
              echo "📦 Node.js project detected"
              npm install
              npm run build || npm start || echo "Build completed"
            elif [ -f "requirements.txt" ]; then
              echo "🐍 Python project detected"
              pip3 install -r requirements.txt
              python3 -c "print('Project setup complete')"
            else
              echo "📁 No build configuration found"
              echo "Creating sample project..."
              mkdir -p sample-project
              cd sample-project
              echo "print('Hello Termux!')" > main.py
              python3 main.py
            fi
            ;;
            
          "system_info")
            echo "📊 System Information (Termux Style)"
            echo "====================================="
            echo "OS: $(uname -a)"
            echo "CPU: $(nproc) cores"
            echo "Memory: $(free -h | grep Mem | awk '{print $2}') total"
            echo "Disk: $(df -h . | awk 'NR==2 {print $4}') available"
            echo "Python: $(python3 --version 2>/dev/null || echo 'Not installed')"
            echo "Node: $(node --version 2>/dev/null || echo 'Not installed')"
            echo "Git: $(git --version 2>/dev/null || echo 'Not installed')"
            ;;
        esac

    - name: Create operation report
      run: |
        echo "📋 OPERATION COMPLETED: ${{ github.event.inputs.operation }}" > operation-report.txt
        echo "==========================================" >> operation-report.txt
        echo "Status: ✅ Success" >> operation-report.txt
        echo "Runner: GitHub Actions - Ubuntu" >> operation-report.txt
        echo "Time: $(date)" >> operation-report.txt
        echo "Workspace: $GITHUB_WORKSPACE" >> operation-report.txt
        cat operation-report.txt
